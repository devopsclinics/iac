
name: 'DevopsClinics-IAC'

on:
  push:
    # branches:
    #   - '*'
  pull_request:
    branches:
      - 'main'
  workflow_run:
    workflows: ["tfsec"]
    types:
      - completed

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_region: ${{ secrets.TF_VAR_region }}
  TF_CLI_ARGS_init: -input=false
  TF_CLI_ARGS_apply: -input=false -auto-approve

permissions:
  contents: read


jobs:
  tfsec:
    name: Run tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Run tfsec
      uses: aquasecurity/tfsec-sarif-action@9a83b5c3524f825c020e356335855741fd02745f
      with:
        sarif_file: tfsec.sarif

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: tfsec.sarif

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: tfsec.sarif



  terraform:
    needs: tfsec
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve -input=false
